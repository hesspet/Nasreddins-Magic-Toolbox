@using Toolbox.Models.CardReading

<button type="button"
        class="tarot-card tarot-card-button @OrientationCssClass"
        style="@InlineStyle"
        aria-label="@EffectiveAltText"
        title="@EffectiveAltText"
        @onclick="HandleClickAsync">
    <span class="tarot-card__inner">
        <img src="@DisplayedImageUrl"
             alt="@EffectiveAltText"
             draggable="false"
             decoding="async" />
    </span>
</button>

@code {
    [Parameter]
    public string BackImageUrl { get; set; } = string.Empty;

    [Parameter]
    public string? FaceImageUrl { get; set; }

    [Parameter]
    public string AltText { get; set; } = string.Empty;

    [Parameter]
    public CardOrientation Orientation { get; set; } = CardOrientation.Vertical;

    [Parameter]
    public string InlineStyle { get; set; } = string.Empty;

    [Parameter]
    public EventCallback OnCardClicked { get; set; }

    private string DisplayedImageUrl => string.IsNullOrWhiteSpace(FaceImageUrl)
        ? BackImageUrl
        : FaceImageUrl;

    private string OrientationCssClass => Orientation == CardOrientation.Horizontal
        ? "tarot-card--horizontal"
        : string.Empty;

    private string EffectiveAltText => string.IsNullOrWhiteSpace(AltText)
        ? "Tarotkarte"
        : AltText;

    private async Task HandleClickAsync()
    {
        if (OnCardClicked.HasDelegate)
        {
            await OnCardClicked.InvokeAsync();
        }
    }
}
