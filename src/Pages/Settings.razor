@page "/settings"
@inject LocalStorageHelper LocalStorage

<PageTitle>@DisplayTexts.SettingsPageTitle</PageTitle>

<h1>@DisplayTexts.SettingsPageHeader</h1>

<HelpDialog @ref="helpDialog" CloseButtonLabel="@DisplayTexts.HelpCloseButtonLabel" NotFoundMessage="@DisplayTexts.HelpNotFoundMessage" />

<section class="settings-section" aria-labelledby="color-theme-label">
    <div class="settings-label-row">
        <label id="color-theme-label" for="color-theme-light">@DisplayTexts.SettingsThemeLabel</label>
        <HelpButton
            AriaLabel="@GetHelpButtonLabel(DisplayTexts.SettingsThemeLabel)"
            OnClick="@(() => ShowHelpAsync("color-theme", DisplayTexts.SettingsThemeLabel))" />
    </div>
    <div class="settings-theme-options" role="radiogroup" aria-labelledby="color-theme-label">
        <div class="form-check">
            <input
                class="form-check-input"
                type="radio"
                name="color-theme"
                id="color-theme-light"
                value="@ThemePreference.Light"
                checked="@(selectedTheme == ThemePreference.Light)"
                @onchange="OnThemePreferenceChanged" />
            <label class="form-check-label" for="color-theme-light">@DisplayTexts.SettingsThemeOptionLight</label>
        </div>
        <div class="form-check">
            <input
                class="form-check-input"
                type="radio"
                name="color-theme"
                id="color-theme-dark"
                value="@ThemePreference.Dark"
                checked="@(selectedTheme == ThemePreference.Dark)"
                @onchange="OnThemePreferenceChanged" />
            <label class="form-check-label" for="color-theme-dark">@DisplayTexts.SettingsThemeOptionDark</label>
        </div>
    </div>
    <p class="settings-description">@DisplayTexts.SettingsThemeDescription</p>
</section>

<section class="settings-section" aria-labelledby="splash-duration-label">
    <div class="settings-label-row">
        <label id="splash-duration-label" for="splash-duration">@DisplayTexts.SettingsSplashDurationLabel</label>
        <HelpButton
            AriaLabel="@GetHelpButtonLabel(DisplayTexts.SettingsSplashDurationLabel)"
            OnClick="@(() => ShowHelpAsync("splash-duration", DisplayTexts.SettingsSplashDurationLabel))" />
    </div>
    <select id="splash-duration" class="form-select" @onchange="OnDurationChanged">
        @foreach (var option in ApplicationSettings.SplashScreenDurationOptions)
        {
            <option value="@option" selected="@(option == selectedDuration ? "selected" : null)">@option</option>
        }
    </select>
    <p class="settings-description">@DisplayTexts.SettingsSplashDurationDescription</p>
</section>

<section class="settings-section" aria-labelledby="card-scale-label">
    <div class="settings-label-row">
        <label id="card-scale-label" for="card-scale">@string.Format(DisplayTexts.SettingsCardScaleLabel, cardScalePercent)</label>
        <HelpButton
            AriaLabel="@GetHelpButtonLabel(string.Format(DisplayTexts.SettingsCardScaleLabel, cardScalePercent))"
            OnClick="@(() => ShowHelpAsync("card-scale", string.Format(DisplayTexts.SettingsCardScaleLabel, cardScalePercent)))" />
    </div>
    <input
        id="card-scale"
        class="form-range"
        type="range"
        min="@ApplicationSettings.CardScalePercentMinimum"
        max="@ApplicationSettings.CardScalePercentMaximum"
        value="@cardScalePercent"
        @oninput="OnCardScaleChanged" />
    <div class="settings-card-scale-control">
        <input
            id="card-scale-number"
            class="form-control"
            type="number"
            min="@ApplicationSettings.CardScalePercentMinimum"
            max="@ApplicationSettings.CardScalePercentMaximum"
            value="@cardScalePercent"
            @onchange="OnCardScaleNumberChanged" />
        <span class="settings-card-scale-suffix">%</span>
    </div>
    <p class="settings-description">@DisplayTexts.SettingsCardScaleDescription</p>
</section>

<section class="settings-section" aria-labelledby="search-auto-clear-label">
    <div class="settings-label-row">
        <label id="search-auto-clear-label" for="search-auto-clear">@DisplayTexts.SettingsSearchAutoClearLabel</label>
        <HelpButton
            AriaLabel="@GetHelpButtonLabel(DisplayTexts.SettingsSearchAutoClearLabel)"
            OnClick="@(() => ShowHelpAsync("search-auto-clear", DisplayTexts.SettingsSearchAutoClearLabel))" />
    </div>
    <input
        id="search-auto-clear"
        class="form-control"
        type="number"
        min="@ApplicationSettings.SearchAutoClearDelayMinimumSeconds"
        max="@ApplicationSettings.SearchAutoClearDelayMaximumSeconds"
        value="@searchAutoClearDelaySeconds"
        @onchange="OnSearchAutoClearDelayChanged" />
    <p class="settings-description">@DisplayTexts.SettingsSearchAutoClearDescription</p>
</section>

<section class="settings-section" aria-labelledby="update-check-label">
    <div class="form-check form-switch">
        <input
            id="check-updates-on-startup"
            class="form-check-input"
            type="checkbox"
            role="switch"
            checked="@checkForUpdatesOnStartup"
            @onchange="OnCheckForUpdatesChanged" />
        <div class="settings-label-row">
            <label id="update-check-label" class="form-check-label" for="check-updates-on-startup">
                @DisplayTexts.SettingsCheckForUpdatesLabel
            </label>
            <HelpButton
                AriaLabel="@GetHelpButtonLabel(DisplayTexts.SettingsCheckForUpdatesLabel)"
                OnClick="@(() => ShowHelpAsync("check-updates-on-startup", DisplayTexts.SettingsCheckForUpdatesLabel))" />
        </div>
    </div>
    <p class="settings-description">@DisplayTexts.SettingsCheckForUpdatesDescription</p>
</section>


